% Definizione di x1 e x2
figure f1;
figure f2;

figure(f1)
x1=audioread("four_noise.wav");
x2=audioread("three_noise.wav");
% Definizione di x_ref

x_ref = audioread('three_ref.wav');



% Primo metodo
alpha1 = norm(x_ref) / norm(x1);
x1_sign = alpha1 * x1;
ex1 = x1_sign - x_ref;
Ex1 = sum(ex1.^2);

alpha2 = norm(x_ref) / norm(x2);
x2_sign = alpha2 * x2;
ex2 = x2_sign - x_ref;
Ex2 = sum(ex2.^2);

subplot(3,1,1);
plot(linspace(0,1,length(x1_sign)), x1_sign)
title("x_1 normalizzato")

subplot(3,1,2);
plot(linspace(0,1,length(x2_sign)), x2_sign)
title("x_2 normalizzato")

subplot(3,1,3);
plot(linspace(0,1,length(x_ref)), x_ref)
title("x_{ref}")

fprintf('Energia di e1: %f\n', Ex1);
fprintf('Energia di e2: %f\n', Ex2);
%secondo metodo

% Calcolo delle correlazioni
Rref=xcorr(x_ref);
Rc1=xcorr(x_ref,x1_sign);
Rc2=xcorr(x_ref,x2_sign);

%normalizzazione
alpha1=norm(Rref)/norm(Rc1);
alpha2=norm(Rref)/norm(Rc2);
Rc1_sign=alpha1.*Rc1;
Rc2_sign=alpha2.*Rc2;

%differenza di segnali
DifE1=sum(abs((Rc1_sign - Rref)).^2);
DifE2=sum(abs((Rc2_sign- Rref)).^2);

fprintf('Energia di differenza 1: %f\n', DifE1);
fprintf('Energia di differenza 2: %f\n', DifE2);

figure(f2);
subplot(3,1,1);
plot(linspace(0,2,length(x2_sign)), x1_sign)
title("x_1 normalizzato")












